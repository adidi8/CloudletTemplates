apiVersion: v1
kind: Service
metadata:
  name: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
  namespace: {{ index .Values "global" "namespaceOverride" }}
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    deploymentConfig: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    description: Route for application's http service.
  labels:
    application: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
  name: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
  namespace: {{ index .Values "global" "namespaceOverride" }}
spec:
  host: ""
  to:
    kind: Service
    name: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
  tls:
    termination: passthrough
    insecureEdgeTerminationPolicy: Redirect
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    application: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
  name: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
  namespace: {{ index .Values "global" "namespaceOverride" }}
spec:
  replicas: 1
  selector:
    deploymentConfig: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        application: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
        deploymentConfig: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
      name: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
    spec:
      containers:
      - name: "{{ index .Values "APPLICATION_NAME" }}-monitoring"
        image: "{{ .Values.image_monitoring.repository }}:{{ .Values.image_monitoring.tag }}"
        imagePullPolicy: Always
        env:
          - name: APPLICATION_NAME
            valueFrom:
              configMapKeyRef:
                name: node-config-monitoring
                key: APPLICATION_NAME
          - name: NAMESPACE
            valueFrom:
              configMapKeyRef:
                name: node-config-monitoring
                key: NAMESPACE
          - name: REPLICA_SET
            valueFrom:
              configMapKeyRef:
                name: node-config-monitoring
                key: REPLICA_SET
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: node-secret-monitoring
                key: DB_USERNAME
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: node-secret-monitoring
                key: DB_PASSWORD
          - name: DATABASE
            valueFrom:
              configMapKeyRef:
                name: node-config
                key: DATABASE
        livenessProbe:
          httpGet:
            path: /health-check
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 2
        ports:
        - containerPort: 8443
          name: http
          protocol: TCP
      terminationGracePeriodSeconds: 75
  triggers:
  - type: ConfigChange