apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespace  }}
  annotations:
    openshift.io/description: 'Sample Node.js+Postgres App'
    openshift.io/display-name: 'Sample Node.js+Postgres App'
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.APPLICATION_NAME }}
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    deploymentConfig: {{ .Values.APPLICATION_NAME }}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    description: Route for application's http service.
  labels:
    application: {{ .Values.APPLICATION_NAME }}
  name: {{ .Values.APPLICATION_NAME }}
  namespace: {{ .Values.namespace }}
spec:
  host: ""
  to:
    kind: Service
    name: {{ .Values.APPLICATION_NAME }}
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    application: {{ .Values.APPLICATION_NAME }}
  name: {{ .Values.APPLICATION_NAME }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    deploymentConfig: {{ .Values.APPLICATION_NAME }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        application: {{ .Values.APPLICATION_NAME }}
        deploymentConfig: {{ .Values.APPLICATION_NAME }}
      name: {{ .Values.APPLICATION_NAME }}
    spec:
      containers:
      - name: sampleapp
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        name: {{ .Values.APPLICATION_NAME }}
        livenessProbe:
          httpGet:
            path: /health-check
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 2
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
      terminationGracePeriodSeconds: 75
  triggers:
  - type: ConfigChange